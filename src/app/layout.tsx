import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { cookies } from "next/headers";
import { getBlogerAll, getProfile } from "@/untils/sessionprovider";
import { AuthProvider } from "@/untils/auth";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = await cookies()
  const getcookie = cookieStore.get('Authentication')
  const getDataProfile = await getProfile()
  const getBlogerall = await getBlogerAll()
  return (
    <AuthProvider value={{getcookie:getcookie?.value,getprofile:getDataProfile?.data,getBlogerAll:getBlogerall}}>
      <html lang="en">

        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased bg-gray-200`}
        >
          {children}
        </body>
      </html>
    </AuthProvider>
  );
}
